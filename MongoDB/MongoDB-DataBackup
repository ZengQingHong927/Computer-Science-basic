# 數據備份恢復

## 
MongoDB的數據安全包括以下幾個概念：

恢復日志（Journal）
寫關注（Write Concern)

### 恢復日誌

在MySQL， PostgreSQL，Oracle等關係型數據庫都有一個Write Ahead Log（Redo Log）的機制用來解決因為系统掉電或者崩潰時導致內存數據丟失問題。
MongoDB 的journal就是實現這個目的的一種WAL日誌。在MongoDB 2.0之前，Journal沒有被支持或者默認選項。所以當你進行寫入操作時。在沒有Journal的情况下，MongoDB是這樣保存數據的：
简单来说，數據在寫入內存之後給應用程式。而數據刷盤動作則在後台由操作系統來進行。MongoDB會每隔60秒強制把數據刷到硬盤上。大家可以想像得到，如果這是系統崩潰或掉電，那麼未刷盤的數據就会彻底丢失了。

自從2.0開始，MongoDB已经把Journal日誌默認開啟

MongoDB會先把數據更新寫入到Journal Buffer然後再更新內存數據，再返回給應用端。Journal會以100ms的間隔批量刷到硬盤上。這樣的情況下，即使出現掉電數據尚未寫到硬盤中，由於有Journal文件的存在，
MongoDB會自動根據Journal裡面的歷史紀錄來對數據文件進行追加。

那麼要是系統掉電正好發生在上次刷Journal的之後50ms呢？這個時候，就可以來看一下MongoDB持久化的下一個概念：寫關注

### 寫關注

寫關注（或稱寫安全機制）可以讓你靈活地指定寫操作的持久化設定。這是一個在性能和可靠性之间的一個權衡。 寫關注有以下幾個級別：

{w: 0} Unacknowledged
Unacknowledged指的是對每個寫入操作，MongoDB並不會返回一個是否成功的狀態值。這個級別是寫入性能最好但也是最不安全的級別。比如说，你试图插入一个违反了唯一性的文档（重复的身份证号），那么MongoDB会拒绝写入并报错。但是由于驱动端并没有在乎你的报错，应用程序还满心欢喜以为一切都没问题，下回再来查询那条数据的时候就会出现数据缺失的情况。

有不少时候MongoDB用来保存一些监控和程序日志数据，这个时候如果你有1、2条数据丢失，是不会对应用程序有什么影响的。基于这些MongoDB早些时候不成熟考量，MongoDB在2.2之前的默认设置就是 {w:0}。这是个让MongoDB 悔恨无比的选择，因为这个是很多人觉得MongoDB数据不安全的根本原因。

在MongoDB 2.4，这个设置已经被改为下面的 {w:1}
